start;end;deviceid;audit;audit_URL;logo;"Thank you for deciding to participate in this study! Please answer a few short questions first. Then you will be given some tasks. The estimated duration for participation is **45 minutes**. Please note that participation must take place on a Windows or Linux computer. Your answers will be used in anonymized form for the evaluation of my master's thesis.

**Important: Do not refresh the page or close the tab during the process, otherwise your entries will be lost!** The answers will only be submitted at the very end—if you stop beforehand, the data will be lost. As an additional note: This site has the unfortunate property of incorrectly interpreting the marking of text as a swipe gesture, so it may happen that you jump back a page when you mark text (this is not a big deal, as you can simply use the button at the bottom to go back to the next page, it's just a bit annoying). If you have any questions at any point, you can contact me by email ([falko1@uni-bremen.de](mailto:falko1@uni-bremen.de)), on Telegram ([t.me/falko17](https://t.me/falko17)) or on Discord (falko17).";For this study, please download two programs: On the one hand, **SEE** (2.7 GB unpacked, download [here for Linux](https://drive.google.com/file/d/1dtLno50KPriWcCEKIcEFt3tYYX4ve7-n/view?usp=sharing) and [here for Windows](https://drive.google.com/file/d/10KUhLPiGgdmvIfz5jxBCM0gEFZEG3eNS/view?usp=sharing)) and on the other hand, a specially prepared **VSCode** (1 GB unpacked, download [here for Linux](https://drive.google.com/file/d/13EBotIdooPyACAB4empO814lk_qv030b/view?usp=sharing) and [here for Windows](https://drive.google.com/file/d/12JyLHJSd1bIhrERTmDBlI6qPo6-RFTCq/view?usp=sharing)). Since this may take some time, you can start with the questionnaire in the meantime (the downloads are not yet needed for this).;Please enter your gender.;gender_update;Please enter your age.;What is your highest school or university degree?;How long have you been programming?;How long have you been programming on bigger software projects (e.g., within a company, or open-source projects)?;Do you know **SEE (_Software Engineering Experience_)**?;Do you know **Visual Studio Code (VSCode)**?;Have you worked in IDEs (Integrated Developer Environments), such as Eclipse, VSCode, oder IntelliJ?;Warning in advance: If you have not worked with IDEs before, this study could be difficult. Feel free to try it anyway, but let me know if anything is unclear at any point, as the study implicitly assumes that the basics of IDE usage are known.;Do you have experience with 3D video games for desktop PCs?;Have you ever used the program **SpotBugs** (previously FindBugs)?;Have you ever used the program **JabRef**?;Can you use the programming language Java?;Warning in advance: If you have not worked with Java before, this study could be difficult. Feel free to try it anyway, but let me know if anything is unclear at any point, as the study implicitly assumes that you know the basics of object-oriented programming.;"Thank you for your answers! Here is a brief explanation of _Visual Studio Code_ (VSCode). **Please read this explanation carefully!** VSCode is an IDE, i.e., an Integrated Development Environment. For this task, however, we only need the display and navigation features, so no code needs to be modified. 

For some of the tasks, you'll need [this table of metrics](https://docs.google.com/spreadsheets/d/1erJZTwYtG-CQfZJPT-zt-chX_VHL9jLrVfWAWZMFvEo/edit?usp=sharing) about the project, please open it in a new tab. Here, associated metrics are available for each Java class. Most columns are self-explanatory, but to highlight a few things:  
- LOC indicates the number of lines of code in the class.
- Num_Methods indicates the number of methods in the class.
- By clicking on the arrow next to the letter at the top of one of the columns, you can sort the table by the values in that column.
- If you're more comfortable with an offline program like Excel, you can also download the file under ""File → Download"".

Please now unzip the downloaded VSCode.zip. On Windows, please use a program like [7-Zip](https://www.7-zip.org/) to unzip, as the native Windows unpacker sometimes has problems with deeply nested archives. For the tasks, you need a **JDK 21**. If you don't have one installed, on Windows, please run the microsoft-jdk MSI file included in the zip file to install the JDK. If you're using Linux, you'll probably know what to do (the installation differs depending on the distro—contact me if you need help). Afterwards, you can open VSCode by running the vscode.bat (or vscode.sh on Linux) file included in the folder. First, you'll be asked if you trust the authors of this folder, please select ""Yes"" here. On Windows, you might also get firewall requests, please allow these as well so that dependencies can be downloaded. Then follow the instructions below to prepare VSCode for the tasks.";v1expl2;"Now, please look at the bottom left. It should say ""Java: Lightweight Mode"", and next to it there's probably a loading indicator (in the screenshot above, the red arrow points to the loading indicator). Please wait until the loading process is complete. This can take quite a while—up to 5 minutes on Windows (you can continue reading in the meantime). *It's okay if something like ""Gradle Error"" appears on the right at the end. The main thing is that ""Java: Lightweight Mode"" is on the left and there's no loading process running next to it.* 

Here's a brief explanation of some VSCode features that are useful for the tasks:  
- On the left side is the folder structure as a tree. Only the ""src"" folder is relevant for the tasks, so you can ignore the other folders and files.
- With Ctrl+P, you can search for files by filename. Since in Java projects, a Java file contains exactly one class (at least you can assume so here), you can use this to search for classes by adding "".java"" to the end of your search.
- If you hold down Ctrl and then click on code elements, you can jump to their definition. In the screenshot below, clicking on the parent class SimpleCommand would, for example, open the file ""SimpleCommand.java"".";v1expl4;"The project for this task is called SpotBugs. This is a program that is supposed to automatically find bugs in Java programs using static analysis.

Familiarize yourself with the VSCode interface and see if you can understand the explanation above. Try to work on the example task below. If you have any questions, you can contact me via email (falko1@uni-bremen.de), on Telegram (t.me/falko17) or on Discord (falko17).\";Find the class **AbstractDominatorsAnalysis**. How many methods does its parent class declare?;"Great, that was correct! As soon as you are ready, select ""OK"" below, from then on the time will be stopped. **Please note that from this point on, the time will be measured until you complete the task!** Please only take a break after you have completed the task.";vscode1ready1_update;**Only use VSCode and, if necessary, the [metrics table](https://docs.google.com/spreadsheets/d/1erJZTwYtG-CQfZJPT-zt-chX_VHL9jLrVfWAWZMFvEo/edit?usp=sharing) for this class!**;Find the three classes in SpotBugs with the highest number of methods. You don't need to include the generic types in the names, which means everything within <such brackets> can be omitted.;**Class**;**Class name**;#### Class with the most methods;"<span style=""display:none"">s1b class</span>";#### Class with the 2nd-most methods;"<span style=""display:none"">s2b class</span>";#### Class with the 3rd-most methods;"<span style=""display:none"">s3b class</span>";v1a1_m1b_name_update;v1a1_m2b_name_update;v1a1_m3b_name_update;"Click ""OK"" once you are done with this task.";vs1done1_update;I am overall satisfied with how easy this task was to solve.;I am overall satisfied with how much time it took to solve this task.;"As soon as you are ready for the next task, select ""OK"" below, from then on the time will be measured again.";vs1ready2_update;**Only use VSCode and, if necessary, the [metrics table](https://docs.google.com/spreadsheets/d/1erJZTwYtG-CQfZJPT-zt-chX_VHL9jLrVfWAWZMFvEo/edit?usp=sharing) for this class!**;"Find the unit test classes (in Java these typically have names ending in ""Test"") in SpotBugs and identify the convention used to organize the unit tests.";According to which convention were unit tests organized in SpotBugs?;What is the full name of the root package (the topmost package) for test classes?;Name any of the dispersed test classes.;Please specify how the unit tests are organized.;v1a2_aconv_update;v1a2_acent_update;v1a2_adisp_update;v1a2_amisc_update;"Click ""OK"" once you are done with this task.";vs1done2_update;I am overall satisfied with how easy this task was to solve.;I am overall satisfied with how much time it took to solve this task.;"Before the next task, here's a brief explanation of what a **base class** is. The base class of a class is its superordinate (i.e., above in the inheritance tree) class that itself has no further parent class within the project. 
Example: Class A inherits from B, Class B inherits from C, Class C inherits from Object (which is not in the project). In this case, the base class of A is Class C.";baseexample;To make sure this term is clear: Please select the base class of **HouseCat**.;"Great, that was correct! Then everything seems to be in order. As soon as you are ready, select ""OK"" below, from then on the time will be measured again.";vs1ready3_update;**Only use VSCode and, if necessary, the [metrics table](https://docs.google.com/spreadsheets/d/1erJZTwYtG-CQfZJPT-zt-chX_VHL9jLrVfWAWZMFvEo/edit?usp=sharing) for this class!**;Navigate to the class **OptionalReturnNull** and find the _base class_ of this class. The base class of a class is its superordinate (i.e., above in the inheritance tree) class that itself has no further parent class within the project.;What is the base class of **OptionalReturnNull**?;v1a3_a_update;"Click ""OK"" once you are done with this task.";vs1done3_update;I am overall satisfied with how easy this task was to solve.;I am overall satisfied with how much time it took to solve this task.;Nice, you're done with the VSCode task! Please answer a few more questions below about VSCode, and then we can move on to the SEE task.;I think that I would like to use VSCode frequently.;I found VSCode unnecessarily complex.;I thought VSCode was easy to use.;I think that I would need the support of a technical person to be able to use VSCode.;I found the various functions in VSCode were well integrated.;I thought there was too much inconsistency in VSCode.;I would imagine that most people would learn to use VSCode very quickly.;I found VSCode very cumbersome to use.;I felt very confident using VSCode.;I needed to learn a lot of things before I could get going with VSCode.;Regarding VSCode, do you have any other suggestions for improvement, things that you noticed, or general comments?;"You've completed the VSCode part! Now only the SEE part is missing.
SEE stands for _""Software Engineering Experience""_ and is a program that is intended to help you understand complex software. For this purpose, the source code of the software being examined is represented in the form of 3D cities. Each class is represented as a single building. The city is hierarchically structured: classes are contained in packages, which in turn are contained in other packages. In SEE, this is represented in that each building (class) is located within another area (package). You can navigate this city in the same way as in 3D video games, by moving the mouse and using the W/A/S/D keys.";s2expl2;In this image, you can see such a city. Here we see packages as blue rectangles and classes as white/red blocks. It is important to note that the **larger** a block is, the more **lines of code** it has. The **redder** a block is, the more **methods** it has. The project for this task is called JabRef. This is a bibliography manager, which is a program used for managing scientific literature.  [Please click here to watch a short explanatory video about SEE.](https://youtu.be/WE21naXp\_YM);"The control and use of SEE is explained in the video, and the pressed keys are shown at the bottom of the video. Here is a brief summary (but please watch the video, as it contains important details):

- W/A/S/D: Forward/Left/Backward/Right (hold Shift: faster movement)
- Right mouse pointer: Hold down and move the mouse to change the viewing angle
- Mouse pointer on a block: Displays class/package names and possibly edges to parent classes
- Click on a block: Keep the edges displayed
- Scroll the mouse wheel with the mouse pointer on the city: Zoom in/out the city
- Ctrl + middle mouse button: Move the mouse to move the city
- Right-click on a block: Open the context menu
- Tab: Open the search menu
- Alt+F4: Close SEE

Please now unpack the downloaded SEE.zip and run SEE.exe (SEE.x86_64 under Linux). When unpacking under Windows, please use a program like [7-Zip](https://www.7-zip.org), as the native Windows unpacker sometimes has problems with deeply nested archives. Familiarize yourself with the controls and see if you can follow the explanation above. Try to work on the example task below. If any problems occur, it is also no problem to close and reopen SEE at any time. If you have any further questions or if something does not work even after restarting SEE, you can contact me by email ([falko1@uni-bremen.de](mailto:falko1@uni-bremen.de)), on Telegram ([t.me/falko17](https://t.me/falko17)) or on Discord (falko17).";Find the class **CapitalizeFormatter**. How many methods does its parent class declare?;"Great, that was correct! As soon as you are ready, select ""OK"" below, from then on the time will be stopped. **Please note that from this point on, the time will be measured until you complete the task!** Please only take a break after you have completed the task.";see2ready1_update;**Only use SEE for the following task!**;Find the three classes in JabRef with the highest number of methods. You don't need to include the generic types in the names, which means everything within <such brackets> can be omitted.;**Class**;**Class name**;#### Class with the most methods;"<span style=""display:none"">sp1b class</span>";#### Class with the 2nd-most methods;"<span style=""display:none"">sp2b class</span>";#### Class with the 3rd-most methods;"<span style=""display:none"">sp3b class</span>";s2a1_m1b_name_update;s2a1_m2b_name_update;s2a1_m3b_name_update;"Click ""OK"" once you are done with this task.";see2done1_update;I am overall satisfied with how easy this task was to solve.;I am overall satisfied with how much time it took to solve this task.;"As soon as you are ready for the next task, select ""OK"" below, from then on the time will be measured again.";see2ready2_update;**Only use SEE for the following task!**;"Find the unit test classes (in Java these typically have names ending in ""Test"") in JabRef and identify the convention used to organize the unit tests.";According to which convention were unit tests organized in JabRef?;What is the full name of the root package (the topmost package) for test classes?;Name any of the dispersed test classes.;Please specify how the unit tests are organized.;s2a2_aconv_update;s2a2_acent_update;s2a2_adisp_update;s2a2_amisc_update;"Click ""OK"" once you are done with this task.";see2done2_update;I am overall satisfied with how easy this task was to solve.;I am overall satisfied with how much time it took to solve this task.;"As soon as you are ready for the next task, select ""OK"" below, from then on the time will be measured again.";see2ready3_update;**Only use SEE for the following task!**;Navigate to the class **GenderEditorViewModel** and find the _base class_ of this class. The base class of a class is its superordinate (i.e., above in the inheritance tree) class that itself has no further parent class within the project.;What is the base class of **GenderEditorViewModel**?;s2a3_a_update;"Click ""OK"" once you are done with this task.";see2done3_update;I am overall satisfied with how easy this task was to solve.;I am overall satisfied with how much time it took to solve this task.;Thank you, you've completed all tasks! Please just fill out this final questionnaire below, then you are done.;I think that I would like to use SEE frequently.;I found SEE unnecessarily complex.;I thought SEE was easy to use.;I think that I would need the support of a technical person to be able to use SEE.;I found the various functions in SEE were well integrated.;I thought there was too much inconsistency in SEE.;I would imagine that most people would learn to use SEE very quickly.;I found SEE very cumbersome to use.;I felt very confident using SEE.;I needed to learn a lot of things before I could get going with SEE.;Regarding SEE, do you have any other suggestions for improvement, things that you noticed, or general comments?;Is there anything else you would like to mention regarding your participation or in general?;And that's it! Thanks again for completing your participation, please don't forget to send your results using the button below. **Sending the results can take up to 30 seconds, please do not close the window before everything has been sent!**;_id;_uuid;_submission_time;_validation_status;_notes;_status;_submitted_by;__version__;_tags;_index
2024-09-13T17:03:52.420+02:00;2024-09-13T18:06:12.537+02:00;[REDACTED];;;;;;[REDACTED];2024-09-13T17:10:47.385+02:00;[REDACTED];[REDACTED];[REDACTED];[REDACTED];No;Yes, I’ve used it;Yes;;Yes, have played a lot;No;No;Yes;;;;;;;13;OK;2024-09-13T17:25:55.259+02:00;;;;;;AbstractFrameModelingVisitor;;BugInstance;;TypeFrameModelingVisitor;2024-09-13T17:29:14.541+02:00;2024-09-13T17:29:49.370+02:00;2024-09-13T17:30:16.029+02:00;OK;2024-09-13T17:30:25.857+02:00;6;6;OK;2024-09-13T17:30:46.160+02:00;;;None: There are no unit tests.;;;;2024-09-13T17:39:28.532+02:00;;;;OK;2024-09-13T17:39:29.963+02:00;4;2;;;LivingBeing;OK;2024-09-13T17:40:37.080+02:00;;;BetterVisitor;2024-09-13T17:41:53.526+02:00;OK;2024-09-13T17:41:53.649+02:00;7: Very satisfied;6;;3;1: Strongly disagree;4;1: Strongly disagree;4;2;4;1: Strongly disagree;5: Strongly agree;1: Strongly disagree;Auch zu Zeiten wo ich VSCodeveruflich verwendet habe, hätte ich bei einigen Aufgaben auf Linux-Kommandozeilen verzeuge innerhalb von VSCode zugegriffen, um die Aufgaben schneller zu erledigen;;;;;7;OK;2024-09-13T17:51:59.228+02:00;;;;;;BibtexParserTest;;JabRefPreferences;;AuthorListTest;2024-09-13T17:58:15.108+02:00;2024-09-13T17:58:16.144+02:00;2024-09-13T17:58:20.140+02:00;OK;2024-09-13T17:58:20.306+02:00;6;4;OK;2024-09-13T17:58:38.726+02:00;;;Centralized: There is a single package hierarchy containing all test classes.;src.test.java.org.jabref;;;2024-09-13T17:59:51.586+02:00;2024-09-13T18:00:21.847+02:00;;;OK;2024-09-13T18:00:23.484+02:00;7: Very satisfied;7: Very satisfied;OK;2024-09-13T18:00:37.754+02:00;;;AbstractViewModel;2024-09-13T18:02:07.684+02:00;OK;2024-09-13T18:02:07.766+02:00;7: Very satisfied;7: Very satisfied;;2;3;4;1: Strongly disagree;4;2;3;2;2;2;First Person Camera + Maus Auswahl ist eine sehr ungewohnte Kombination. Grob abschätzen was die meiste Anzahl an Methoden hat ist schnell, aber Convidence darin zu entwicklen, dass es numerisch exakt ist, ist schwer. Dateipfade hätte ich prominenter gerne angezeigt bekommen;-;;[REDACTED];[REDACTED];2024-09-13T16:06:14;[REDACTED];;submitted_via_web;;[REDACTED];;1
2024-09-15T20:39:35.128+02:00;2024-09-15T21:38:21.473+02:00;[REDACTED];;;;;;[REDACTED];2024-09-15T20:42:00.321+02:00;[REDACTED];[REDACTED];[REDACTED];[REDACTED];Yes, I’ve developed (parts of) it;Yes, it’s my main IDE;Yes;;Yes, have played a lot;No;No;Yes;;;;;;;13;OK;2024-09-15T21:11:32.211+02:00;;;;;;AbstractFrameModelingVisitor;;BugInstance;;TypeFrameModelingVisitor;2024-09-15T21:13:06.226+02:00;2024-09-15T21:13:10.377+02:00;2024-09-15T21:13:15.836+02:00;OK;2024-09-15T21:13:15.939+02:00;4;4;OK;2024-09-15T21:13:42.839+02:00;;;Other: Please specify manually.;;;Ich habe nur die Datei 'InvalidJUnitTest.java' gefunden, bei der der Name mit Test endet. Ansonsten;2024-09-15T21:16:01.020+02:00;;;2024-09-15T21:17:01.479+02:00;OK;2024-09-15T21:18:02.676+02:00;2;4;;;LivingBeing;OK;2024-09-15T21:18:40.486+02:00;;;BetterVisitor;2024-09-15T21:19:12.706+02:00;OK;2024-09-15T21:19:12.794+02:00;7: Very satisfied;7: Very satisfied;;5: Strongly agree;1: Strongly disagree;5: Strongly agree;1: Strongly disagree;5: Strongly agree;1: Strongly disagree;5: Strongly agree;1: Strongly disagree;5: Strongly agree;1: Strongly disagree;Die Frage zu der Struktur der Unit-Tests fande ich missverständlich.;;;;;7;OK;2024-09-15T21:27:46.693+02:00;;;;;;BixtexParserTest (143);;JabRefPreferences (136);;AuthorListTest (127);2024-09-15T21:32:23.643+02:00;2024-09-15T21:32:14.947+02:00;2024-09-15T21:32:12.932+02:00;OK;2024-09-15T21:32:27.486+02:00;4;4;OK;2024-09-15T21:32:34.181+02:00;;;Centralized: There is a single package hierarchy containing all test classes.;src.test.java.org.jabref;;;2024-09-15T21:33:33.607+02:00;2024-09-15T21:33:49.259+02:00;;;OK;2024-09-15T21:33:49.362+02:00;7: Very satisfied;7: Very satisfied;OK;2024-09-15T21:33:54.422+02:00;;;AbstractViewModel;2024-09-15T21:36:29.806+02:00;OK;2024-09-15T21:36:29.897+02:00;6;3;;5: Strongly agree;3;5: Strongly agree;4;4;3;3;4;4;3;Es sollte möglich sein in der TreeView alle Klassen unabhängig von der Baumstruktur zu sortieren. (z.B. alle Klassen nach Anzahl der Methoden zu sortieren, habe ich auf jeden Fall nicht hinbekommen);;;[REDACTED];[REDACTED];2024-09-15T19:38:15;[REDACTED];;submitted_via_web;;[REDACTED];;2
2024-09-16T07:15:41.871+02:00;2024-09-16T08:08:43.846+02:00;[REDACTED];;;;;;[REDACTED];2024-09-16T07:30:39.300+02:00;[REDACTED];[REDACTED];[REDACTED];[REDACTED];Yes, I’ve developed (parts of) it;Yes, I’ve used it;Yes;;Yes, but barely played;No;No;Yes;;;;;;;13;OK;2024-09-16T07:40:55.374+02:00;;;;;;AbstractFrameModelingVisitor.java;;BugInstance.java;;TypeFrameModelingVisitor.java;2024-09-16T07:41:52.811+02:00;2024-09-16T07:41:58.655+02:00;2024-09-16T07:42:06.610+02:00;OK;2024-09-16T07:42:06.947+02:00;7: Very satisfied;7: Very satisfied;OK;2024-09-16T07:42:21.231+02:00;;;Dispersed: The test classes are located in the same package as the tested classes.;;TestCaseDetector, TestASM;;2024-09-16T07:45:53.805+02:00;;2024-09-16T07:46:17.453+02:00;;OK;2024-09-16T07:47:06.396+02:00;5;5;;;LivingBeing;OK;2024-09-16T07:48:19.786+02:00;;;BetterVisitor;2024-09-16T07:49:00.429+02:00;OK;2024-09-16T07:49:02.930+02:00;7: Very satisfied;7: Very satisfied;;5: Strongly agree;1: Strongly disagree;5: Strongly agree;1: Strongly disagree;5: Strongly agree;1: Strongly disagree;4;1: Strongly disagree;4;1: Strongly disagree;;;;;;7;OK;2024-09-16T07:56:30.087+02:00;;;;;;BibTextParserTest.java 143;;JabRefPreferences.java 136;;AuthorListTest.java 127;2024-09-16T08:00:17.146+02:00;2024-09-16T08:00:49.681+02:00;2024-09-16T08:00:41.043+02:00;OK;2024-09-16T08:00:49.766+02:00;5;5;OK;2024-09-16T08:01:36.880+02:00;;;Dispersed: The test classes are located in the same package as the tested classes.;;MainArchitectureTest;;2024-09-16T08:02:03.673+02:00;;2024-09-16T08:02:26.085+02:00;;OK;2024-09-16T08:02:26.196+02:00;7: Very satisfied;7: Very satisfied;OK;2024-09-16T08:02:31.152+02:00;;;AnstractViewModel;2024-09-16T08:03:45.237+02:00;OK;2024-09-16T08:03:45.337+02:00;6;6;;4;2;3;1: Strongly disagree;4;2;4;3;5: Strongly agree;1: Strongly disagree;Schöner neuer Show in City-Effekt, jedoch sollte er nach einigen Sekunden wieder aufhören. In meinem Beispiel liefen mehrere gleichzeitig. Eine Sortierung für das TreeView, wie bei der Excel-Datei wäre schön gewesen für die Suche nach den Num_Methods. Derzeit funktioniert die Sortierung leider nur innerhalb der Pakete, eine Overall-Sortierung wäre hilfreich, so dass die Objekte aus ihren Paketen gezogen werden, wie bei einer Suche im TreeView.;Sehr schön gemacht!;;[REDACTED];[REDACTED];2024-09-16T06:08:46;[REDACTED];;submitted_via_web;;[REDACTED];;3
2024-09-19T13:05:08.609+02:00;2024-09-19T14:04:48.932+02:00;[REDACTED];;;;;;[REDACTED];2024-09-19T13:05:13.440+02:00;[REDACTED];[REDACTED];[REDACTED];[REDACTED];Yes, I’ve developed (parts of) it;Yes, I’ve used it;Yes;;Yes, have played a lot;No;Heard of it;Yes;;;;;;;13;OK;2024-09-19T13:09:08.934+02:00;;;;;;AbstractFrameModelingVisitor;;BugInstance;;TypeFrameModelingVisitor;2024-09-19T13:12:49.163+02:00;2024-09-19T13:12:56.660+02:00;2024-09-19T13:13:29.789+02:00;OK;2024-09-19T13:13:30.593+02:00;6;4;OK;2024-09-19T13:13:50.505+02:00;;;Dispersed: The test classes are located in the same package as the tested classes.;;TestDataflowAnalysis;;2024-09-19T13:25:28.074+02:00;;2024-09-19T13:25:53.440+02:00;;OK;2024-09-19T13:25:54.471+02:00;4;4;;;LivingBeing;OK;2024-09-19T13:28:46.553+02:00;;;BetterVisitor;2024-09-19T13:29:59.842+02:00;OK;2024-09-19T13:29:59.927+02:00;5;5;;4;3;4;2;5: Strongly agree;1: Strongly disagree;4;1: Strongly disagree;3;3;;;;;;7;OK;2024-09-19T13:39:37.652+02:00;;;;;;BibtexParserTest;;JabRefPreferences;;AuthorListTest;2024-09-19T13:48:25.148+02:00;2024-09-19T13:48:21.736+02:00;2024-09-19T13:48:20.450+02:00;OK;2024-09-19T13:48:25.221+02:00;6;3;OK;2024-09-19T13:50:24.070+02:00;;;Centralized: There is a single package hierarchy containing all test classes.;test;;;2024-09-19T13:51:36.148+02:00;2024-09-19T13:54:46.046+02:00;;;OK;2024-09-19T13:54:46.120+02:00;4;4;OK;2024-09-19T13:55:07.559+02:00;;;AbstractViewModel;2024-09-19T14:02:38.501+02:00;OK;2024-09-19T14:02:38.610+02:00;4;4;;2;4;3;3;4;2;3;2;3;2;Show Code brachte SEE zum Einfrieren;;;[REDACTED];[REDACTED];2024-09-19T12:04:51;[REDACTED];;submitted_via_web;;[REDACTED];;4
2024-09-19T18:41:23.154+02:00;2024-09-19T20:00:43.990+02:00;[REDACTED];;;;;;[REDACTED];2024-09-19T18:42:12.095+02:00;[REDACTED];[REDACTED];[REDACTED];[REDACTED];Yes, I’ve developed (parts of) it;Yes, I’ve used it;Yes;;Yes, have played a lot;No;No;Yes;;;;;;;13;OK;2024-09-19T19:23:05.406+02:00;;;;;;AbstractFrameModelingVisitor;;BugInstance;;TypeFrameModelingVisitor;2024-09-19T19:24:16.917+02:00;2024-09-19T19:24:47.274+02:00;2024-09-19T19:25:03.795+02:00;OK;2024-09-19T19:25:12.833+02:00;7: Very satisfied;7: Very satisfied;OK;2024-09-19T19:27:24.378+02:00;;;None: There are no unit tests.;;;;2024-09-19T19:30:53.470+02:00;;;;OK;2024-09-19T19:30:54.894+02:00;5;3;;;LivingBeing;OK;2024-09-19T19:32:17.104+02:00;;;BetterVisitor;2024-09-19T19:34:17.132+02:00;OK;2024-09-19T19:34:19.428+02:00;6;6;;4;3;4;3;4;2;2;2;4;4;;;;;;7;OK;2024-09-19T19:42:13.427+02:00;;;;;;BibTextParserTest;;JabRefPreferences;;AuthorListTest;2024-09-19T19:47:33.372+02:00;2024-09-19T19:47:44.285+02:00;2024-09-19T19:48:16.113+02:00;OK;2024-09-19T19:48:16.193+02:00;4;3;OK;2024-09-19T19:48:50.436+02:00;;;Centralized: There is a single package hierarchy containing all test classes.;src.test.java.org.jabRef;;;2024-09-19T19:49:29.005+02:00;2024-09-19T19:49:54.362+02:00;;;OK;2024-09-19T19:50:13.333+02:00;6;7: Very satisfied;OK;2024-09-19T19:50:25.699+02:00;;;AbstractViewModel;2024-09-19T19:54:46.153+02:00;OK;2024-09-19T19:54:46.242+02:00;3;2;;4;3;4;4;4;1: Strongly disagree;2;2;3;2;Das Prüfen der Anzahl der Methoden anhand der Properties ist schwierig. Dies wäre nützlich um ähnliche Rottöne voneinander abzugrenzen. Eine Key-Kombination um in der TreeView Kanten traversieren zu können wäre ebenfalls nützlich um einen leichteren Sprung zum Graphelement als die Optionen des Rechtsklickmenüs zu ermöglichen.;;;[REDACTED];[REDACTED];2024-09-19T18:00:45;[REDACTED];;submitted_via_web;;[REDACTED];;5
2024-09-20T20:54:39.520+02:00;2024-09-20T21:26:45.920+02:00;[REDACTED];;;;;;[REDACTED];2024-09-20T20:55:08.185+02:00;[REDACTED];[REDACTED];[REDACTED];[REDACTED];Yes, I’ve developed (parts of) it;Yes, I’ve used it;Yes;;Yes, have played a lot;No;No;Yes;;;;;;;13;OK;2024-09-20T21:02:17.944+02:00;;;;;;AbstractFrameModelingVisitor;;BugInstance;;TypeFrameModelingVisitor;2024-09-20T21:03:37.522+02:00;2024-09-20T21:03:52.752+02:00;2024-09-20T21:04:05.945+02:00;OK;2024-09-20T21:04:06.049+02:00;7: Very satisfied;6;OK;2024-09-20T21:04:38.284+02:00;;;None: There are no unit tests.;;;;2024-09-20T21:09:50.256+02:00;;;;OK;2024-09-20T21:07:23.943+02:00;5;3;;;LivingBeing;OK;2024-09-20T21:10:29.738+02:00;;;BetterVisitor;2024-09-20T21:11:26.339+02:00;OK;2024-09-20T21:11:26.413+02:00;6;6;;1: Strongly disagree;1: Strongly disagree;3;1: Strongly disagree;4;1: Strongly disagree;4;4;1: Strongly disagree;1: Strongly disagree;;;;;;7;OK;2024-09-20T21:15:30.729+02:00;;;;;;BibtextParserTest;;JabRefPrefrences;;AuthorListTest;2024-09-20T21:19:26.855+02:00;2024-09-20T21:19:34.454+02:00;2024-09-20T21:19:36.496+02:00;OK;2024-09-20T21:19:36.559+02:00;6;4;OK;2024-09-20T21:19:43.187+02:00;;;Dispersed: The test classes are located in the same package as the tested classes.;;NormalizeDataFormatterTest;;2024-09-20T21:21:14.992+02:00;;2024-09-20T21:22:06.540+02:00;;OK;2024-09-20T21:22:06.634+02:00;7: Very satisfied;5;OK;2024-09-20T21:22:29.082+02:00;;;AbstractViewModel;2024-09-20T21:23:40.246+02:00;OK;2024-09-20T21:23:40.320+02:00;7: Very satisfied;7: Very satisfied;;3;2;5: Strongly agree;1: Strongly disagree;3;1: Strongly disagree;3;1: Strongly disagree;5: Strongly agree;1: Strongly disagree;Wenn im TreeView Dinge angeklickt werden, wird der Klick auch auf die City übertragen.;;;[REDACTED];[REDACTED];2024-09-20T19:26:46;[REDACTED];;submitted_via_web;;[REDACTED];;6
2024-09-26T17:47:02.707+03:00;2024-09-26T20:04:16.772+03:00;[REDACTED];;;;;;[REDACTED];2024-09-26T18:14:38.042+03:00;[REDACTED];[REDACTED];[REDACTED];[REDACTED];No;Yes, it’s my main IDE;Yes;;Yes, have played a lot;No;No;A little;;;;;;;13;OK;2024-09-26T19:32:07.581+03:00;;;;;;AbstractFrameModelingVisitor;;BugInstance;;TypeFrameModelingVisitor;2024-09-26T19:34:06.717+03:00;2024-09-26T19:34:03.938+03:00;2024-09-26T19:34:01.456+03:00;OK;2024-09-26T19:34:06.811+03:00;7: Very satisfied;7: Very satisfied;OK;2024-09-26T19:34:29.143+03:00;;;Centralized: There is a single package hierarchy containing all test classes.;InvalidJUnitTest;;;2024-09-26T19:38:46.106+03:00;2024-09-26T19:38:57.656+03:00;;;OK;2024-09-26T19:38:57.731+03:00;5;5;;;LivingBeing;OK;2024-09-26T19:40:08.925+03:00;;;BetterVisitor;2024-09-26T19:41:16.177+03:00;OK;2024-09-26T19:41:16.255+03:00;6;6;;5: Strongly agree;1: Strongly disagree;5: Strongly agree;1: Strongly disagree;4;1: Strongly disagree;4;2;5: Strongly agree;2;;;;;;7;OK;2024-09-26T19:53:07.253+03:00;;;;;;JabRefPreferences;;AuthorListTest;;BibEntryTest;2024-09-26T19:55:02.276+03:00;2024-09-26T19:54:41.815+03:00;2024-09-26T19:57:40.084+03:00;OK;2024-09-26T19:57:40.177+03:00;1: Not satisfied at all;1: Not satisfied at all;OK;2024-09-26T19:57:57.809+03:00;;;Dispersed: The test classes are located in the same package as the tested classes.;;MainArchitectureTest;;2024-09-26T19:59:29.887+03:00;;2024-09-26T20:00:15.392+03:00;;OK;2024-09-26T20:00:15.880+03:00;4;6;OK;2024-09-26T20:00:26.575+03:00;;;AbstractViewModel;2024-09-26T20:02:46.363+03:00;OK;2024-09-26T20:02:46.470+03:00;5;7: Very satisfied;;3;3;4;1: Strongly disagree;4;5: Strongly agree;4;3;3;1: Strongly disagree;;;;[REDACTED];[REDACTED];2024-09-26T17:04:19;[REDACTED];;submitted_via_web;;[REDACTED];;7
2024-09-27T12:09:57.192+02:00;2024-09-27T12:54:07.810+02:00;[REDACTED];;;;;;[REDACTED];2024-09-27T12:11:31.745+02:00;[REDACTED];[REDACTED];[REDACTED];[REDACTED];Yes, I’ve developed (parts of) it;Yes, I’ve used it;Yes;;Yes, have played a lot;No;Heard of it;Yes;;;;;;;13;OK;2024-09-27T12:24:04.635+02:00;;;;;;BasicAbstractDataflowAnalysis;;AnalysisError;;BugAccumulator;2024-09-27T12:25:25.870+02:00;2024-09-27T12:25:51.298+02:00;2024-09-27T12:26:03.568+02:00;OK;2024-09-27T12:26:03.785+02:00;6;6;OK;2024-09-27T12:26:59.405+02:00;;;Dispersed: The test classes are located in the same package as the tested classes.;;InvalidJUnitTest;;2024-09-27T12:29:21.329+02:00;;2024-09-27T12:29:40.122+02:00;;OK;2024-09-27T12:29:40.340+02:00;3;3;;;LivingBeing;OK;2024-09-27T12:30:28.968+02:00;;;BetterVisitor;2024-09-27T12:31:26.176+02:00;OK;2024-09-27T12:31:26.399+02:00;7: Very satisfied;6;;3;2;4;2;4;2;4;2;3;2;;;;;;7;OK;2024-09-27T12:44:25.227+02:00;;;;;;BibtexParserTest;;JabRefPreferences;;AuthorListTest;2024-09-27T12:46:43.071+02:00;2024-09-27T12:47:01.569+02:00;2024-09-27T12:47:09.807+02:00;OK;2024-09-27T12:47:09.885+02:00;5;5;OK;2024-09-27T12:47:27.391+02:00;;;Centralized: There is a single package hierarchy containing all test classes.;src.test.java.org.jabref;;;2024-09-27T12:48:22.004+02:00;2024-09-27T12:48:46.017+02:00;;;OK;2024-09-27T12:48:46.097+02:00;5;5;OK;2024-09-27T12:48:58.019+02:00;;;AbstractViewModel;2024-09-27T12:49:53.116+02:00;OK;2024-09-27T12:49:53.558+02:00;7: Very satisfied;7: Very satisfied;;4;2;3;2;4;2;4;2;4;3;Kein Copy&Paste der Namen möglich gewesen, auch im ShowCode nicht, dass hätte die Zeit der Bearbeitung verringert. Wurde bei den VS Aufgaben genutzt.;"Bei den Aufgaben um das Verständnis zu Überprüfen bevor es zur eigentlichen Aufgabe geht, überliest man gerne ""Elternklasse"", da man denkt mit dem Fettdruck des Klassennamen schon alles wichtige zu wissen.";;[REDACTED];[REDACTED];2024-09-27T10:54:09;[REDACTED];;submitted_via_web;;[REDACTED];;8
2024-10-02T21:37:17.781+03:00;2024-10-02T22:26:30.249+03:00;[REDACTED];;;;;;[REDACTED];2024-10-02T21:37:28.408+03:00;[REDACTED];[REDACTED];[REDACTED];[REDACTED];Heard of it;Yes, it’s my main IDE;Yes;;Yes, have played a lot;No;No;No, not really;;;;;;;13;OK;2024-10-02T21:50:38.138+03:00;;;;;;AbstractFrameModelingVisitor;;BugInstance;;TypeFrameModelingVisitor;2024-10-02T21:52:01.557+03:00;2024-10-02T21:52:08.475+03:00;2024-10-02T21:52:14.936+03:00;OK;2024-10-02T21:52:15.024+03:00;7: Very satisfied;7: Very satisfied;OK;2024-10-02T21:52:27.048+03:00;;;Centralized: There is a single package hierarchy containing all test classes.;edu.umd.cs.findbugs;;;2024-10-02T21:54:21.163+03:00;2024-10-02T21:58:11.768+03:00;;;OK;2024-10-02T21:58:13.769+03:00;4;4;;;LivingBeing;OK;2024-10-02T21:59:23.088+03:00;;;BetterVisitor;2024-10-02T22:01:14.535+03:00;OK;2024-10-02T22:01:14.634+03:00;6;6;;5: Strongly agree;1: Strongly disagree;5: Strongly agree;1: Strongly disagree;5: Strongly agree;1: Strongly disagree;5: Strongly agree;1: Strongly disagree;5: Strongly agree;1: Strongly disagree;It is great in my opinion overall;;;;;7;OK;2024-10-02T22:11:41.454+03:00;;;;;;JabRefPreferences;;BibTexParserTest;;AuthorListTest;2024-10-02T22:13:53.535+03:00;2024-10-02T22:14:10.067+03:00;2024-10-02T22:13:43.383+03:00;OK;2024-10-02T22:14:15.109+03:00;7: Very satisfied;3;OK;2024-10-02T22:16:29.757+03:00;;;Centralized: There is a single package hierarchy containing all test classes.;org.jabref;;;2024-10-02T22:18:08.312+03:00;2024-10-02T22:19:32.684+03:00;;;OK;2024-10-02T22:19:32.842+03:00;3;5;OK;2024-10-02T22:19:51.679+03:00;;;AbstractViewModel;2024-10-02T22:23:51.065+03:00;OK;2024-10-02T22:23:51.181+03:00;7: Very satisfied;6;;3;2;3;2;3;2;4;3;1: Strongly disagree;2;Probably it can be less of 3d because it feels hard to navigate through the city. Also I couldnt copy text from the city itself;;;[REDACTED];[REDACTED];2024-10-02T19:26:28;[REDACTED];;submitted_via_web;;[REDACTED];;9
2024-10-04T15:00:20.376+02:00;2024-10-04T19:44:32.637+02:00;[REDACTED];;;;;;[REDACTED];2024-10-04T17:59:33.692+02:00;[REDACTED];[REDACTED];[REDACTED];[REDACTED];Yes, I’ve developed (parts of) it;Yes, I’ve used it;Yes;;Yes, but barely played;No;Yes, I’ve used it;Yes;;;;;;;13;OK;2024-10-04T19:10:05.465+02:00;;;;;;AbstractFrameModelingVisitor.java;;BugInstance.java;;TypeFrameModelingVisitor.java;2024-10-04T19:12:56.583+02:00;2024-10-04T19:12:59.583+02:00;2024-10-04T19:13:04.274+02:00;OK;2024-10-04T19:13:04.342+02:00;6;5;OK;2024-10-04T19:13:25.746+02:00;;;None: There are no unit tests.;;;;2024-10-04T19:18:29.665+02:00;;;;OK;2024-10-04T19:18:57.251+02:00;2;2;;;LivingBeing;OK;2024-10-04T19:19:34.524+02:00;;;BetterVisitor;2024-10-04T19:21:14.507+02:00;OK;2024-10-04T19:21:14.585+02:00;3;3;;3;3;4;1: Strongly disagree;4;2;4;2;4;2;Emacs / Vim    > VSCode     (ernsthaft, die Symbole sind einfach zu klein um sie mit der Maus zu treffen... :P   );;;;;7;OK;2024-10-04T19:31:53.718+02:00;;;;;;BibtexParserTest;;JabRefPreferences;;AuthorListTest;2024-10-04T19:37:44.476+02:00;2024-10-04T19:38:53.847+02:00;2024-10-04T19:39:12.274+02:00;OK;2024-10-04T19:39:13.330+02:00;2;2;OK;2024-10-04T19:39:19.186+02:00;;;Centralized: There is a single package hierarchy containing all test classes.;src.test.java.org.jabref;;;2024-10-04T19:40:32.700+02:00;2024-10-04T19:40:57.521+02:00;;;OK;2024-10-04T19:41:14.892+02:00;5;5;OK;2024-10-04T19:41:21.453+02:00;;;AbstractViewModel;2024-10-04T19:42:11.249+02:00;OK;2024-10-04T19:42:14.970+02:00;7: Very satisfied;7: Very satisfied;;4;2;3;2;4;2;4;2;3;2;Copy-Paste Funktion wäre in diesem Fall ganz praktisch gewesen, ergibt aber im Kontext von SEE eigentlich weniger Sinn denke ich. Die Einfärbung wäre vielleicht mit einem Farbgradienten mit mehreren Farbstufen besser erkenntlich gewesen - viele Klassen sehen sehr farbgleich aus.;SEE wird immer schöner und es ist wirklich cool, wie die Klassenhierarchie hüpfend dargestellt wird. Erinnert an einen Stein den man auf Wasser flippt - cool.;;[REDACTED];[REDACTED];2024-10-04T17:44:33;[REDACTED];;submitted_via_web;;[REDACTED];;10
