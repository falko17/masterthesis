\newcommand{\codesym}{\faFileCodeO}
\newcommand{\dirsym}{\faFolder}
\newcommand{\filesym}{\faFile}

\newcommand{\onesteps}{%
	\node[nextstep,xshift=0.2cm] (step1) at (foreach.west) {1. Add a node for the document (and its directory).};
	\node[nextstep] (step2) at (step1.west) {2. For each symbol in that document\dots};
	\begin{scope}[opacity=0.5,transparency group]
		\node[right=0.2cm of step2,opacity=0.3,yshift=0.15cm,black] (symbols) {\codesym};
		\node[below left=-0.56cm and -0.49cm of symbols,black] (symbols1) {\codesym};
	\end{scope}
	\node[below left=-0.53cm and -0.48cm of symbols1,black] (symbols2) {\codesym};

	\node[nextstep,xshift=0.2cm] (step21) at (step2.west) {2.1 Add a child node for the symbol.};
	\node[nextstep] (step22) at (step21.west) {2.2 If there are contained symbols, go to 2.1 for each one.};

	\node[nextstep,xshift=-0.2cm,yshift=-0.65cm] (step3) at (step22.west) {3. Retrieve diagnostics for document and attach to\\corresponding nodes.};
}

\newcommand{\twosteps}{%
	\node[nextstep,xshift=0.2cm] (2step1) at (foreachnode.west) {1. Connect edge to definition, if it exists.};
	\node[nextstepsmall] (2step2) at (2step1.west) {2. Connect edge to declaration, if it exists.};
	\node[nextstepsmall] (2step3) at (2step2.west) {3. Connect edge to type definition, if it exists.};
	\node[nextstepsmall] (2step4) at (2step3.west) {4. Connect edge to implementation, if it exists.};
	\node[nextstepsmall] (2step5) at (2step4.west) {5. Connect edge to any references.};
	\node[nextstepsmall] (2step6) at (2step5.west) {6. Connect edge to any outgoing calls using call hierarchy.};
	\node[nextstepsmall] (2step7) at (2step6.west) {7. Connect edge to any supertypes using type hierarchy.};
}

\newcommand{\threesteps}{%
	\node[nextstep,xshift=0.2cm] (3step1) at (foreachroot.west) {1. Aggregate \gls{loc} upwards.};
	\node[nextstepsmall] (3step2) at (3step1.west) {2. Aggregate diagnostic counts upwards.};
	\node[nextstep,xshift=-0.2cm] (3step3) at (3step2.west) {Return constructed graph.};
}

\begin{tikzpicture}[
		node distance=1cm,
		outercontainer/.style={draw=blue!75!black, fill=blue!10,blur shadow={shadow blur steps=5}},
		nextstep/.style={anchor=west,yshift=-1cm,align=left},
		nextstepsmall/.style={nextstep,yshift=0.4cm},
		innerbox/.style={draw=black!80, fill=blue!15, rounded corners=2pt,thick},
		graphnode/.style={draw,circle, fill=black!10,rounded corners=3pt,scale=0.7,blur shadow={shadow xshift=0.2ex,shadow yshift=-0.2ex,shadow opacity=20}},
		newnode/.style={fill=green!20},
		leftgraphnode/.style={graphnode,xshift=0.4cm,anchor=west},
		diagnosticnode/.style={color=red,font=\bfseries\large},
		aggdiagnode/.style={diagnosticnode,opacity=0.3},
		graphedge/.style={-Stealth,thick},
		aggedge/.style={graphedge,densely dotted,red,opacity=0.3},
		edgelabel/.style={sloped,font=\scriptsize\itshape}
	]

	% Main container with light blue background
	\node[outercontainer,minimum width=15.5cm, minimum height=8cm] (container1) {};

	% Title at the top
	\node[anchor=north, yshift=-0.2cm] at (container1.north) {\Large \textbf{\textsf{Part I: Node Synthesis}}};

	% "For each document..." text and small document icon
	\node[anchor=north west, align=left, xshift=0.3cm,yshift=-1cm] (foreach) at (container1.north west) {For each document\dots};
	\begin{scope}[opacity=0.5,transparency group]
		\node[right=0.1cm of foreach,opacity=0.3,yshift=0.15cm,black] (files) {\filesym};
		\node[below left=-0.56cm and -0.49cm of files,black] (files1) {\filesym};
	\end{scope}
	\node[below left=-0.53cm and -0.48cm of files1,black] (files2) {\filesym};

	% Steps first.
	\onesteps{}

	\node[draw=none] (step22r) [right=-0.1cm of step22] {.};

	% Boxes containing steps.
	\node[innerbox,fit=(step1) (step2) (step21) (step22r) (step3)] (stepbox) {};
	\node[innerbox,rounded corners=4pt,fill=blue!20,fit=(step21) (step22)] (step2box) {};

	% Need to draw over fitted background again.
	\onesteps{}

	% Dotted lines
	\draw[dotted] (container1.west |- {$(step1.south)!0.5!(step2.north)$}) -- (container1.east |- {$(step1.south)!0.5!(step2.north)$});
	\draw[dotted] (container1.west |- {$(step21.south)!0.3!(step22.north)$}) -- (container1.east |- {$(step21.south)!0.3!(step22.north)$});
	\draw[dotted] (container1.west |- {$(step22.south)!0.9!(step3.north)$}) -- (container1.east |- {$(step22.south)!0.9!(step3.north)$});

	% Small graph - Step 1
	\node[leftgraphnode, newnode,right=0.5cm of step1] (n1) at (step1 -| stepbox.east) {\dirsym};
	\node[graphnode, newnode, right=0.5cm of n1] (n2) {\filesym};

	\draw[graphedge] (n1) -- (n2);

	% Small graph - Step 2
	\node[leftgraphnode] (n3) at (step2 -| stepbox.east) {\dirsym};
	\node[graphnode, right=0.5cm of n3] (n4) {\filesym};
	\node[graphnode,newnode,below right=0.4cm and 0.2cm of n3] (n5) {\codesym};

	\draw[graphedge] (n3) -- (n4);
	\draw[graphedge] (n4) -- (n5);

	% Small graph - Step 2.2
	\node[leftgraphnode,yshift=-0.15cm] (n6) at (step22.north -| stepbox.east) {\dirsym};
	\node[graphnode, right=0.5cm of n6] (n7) {\filesym};
	\node[graphnode,below right=0.4cm and 0.2cm of n6] (n8) {\codesym};
	\node[graphnode, newnode, right=0.5cm of n8] (n9) {\codesym};

	\draw[graphedge] (n6) -- (n7);
	\draw[graphedge] (n7) -- (n8);
	\draw[graphedge] (n8) -- (n9);

	% Small graph - Step 3
	\node[leftgraphnode,yshift=-0.5cm] (n10) at (step3.north -| stepbox.east) {\dirsym};
	\node[graphnode, right=0.5cm of n10] (n11) {\filesym};
	\node[graphnode,below right=0.4cm and 0.2cm of n10] (n12) {\codesym};
	\node[graphnode, right=0.5cm of n12] (n13) {\codesym};
	\node[graphnode, right=0.5cm of n13] (n14) {\codesym};
	\node[below left=0.5cm and -0.3cm of n10] (n15) {\dots};
	\node[diagnosticnode,right=-0.1cm of n13] {!};
	\node[diagnosticnode,right=0.03cm of n13] {!};
	\node[diagnosticnode,right=-0.1cm of n14] {!};

	\draw[graphedge] (n10) -- (n11);
	\draw[graphedge] (n11) -- (n12);
	\draw[graphedge] (n12) -- (n13);
	\draw[graphedge] (n11) -- (n14);
	\draw[dotted,graphedge] (n10) -- (n15);

	% --- PART II ---

	\node[outercontainer,minimum width=15cm, minimum height=6.5cm,below=of container1] (container2) {};

	% Top of second part.
	\node[anchor=north, yshift=-0.2cm] at (container2.north) {\Large \textbf{\textsf{Part II: Edge Synthesis}}};
	\node[anchor=north west, align=left, xshift=0.3cm,yshift=-1cm] (foreachnode) at (container2.north west) {For each node\dots};
	\begin{scope}[opacity=0.3,transparency group]
		\node[right=0.3cm of foreachnode,opacity=0.3,yshift=0.15cm,graphnode,minimum width=0.7cm,shadow opacity=0] (nodes) {};
		\node[below left=-0.27cm and -0.25cm of nodes,graphnode,minimum width=0.7cm,shadow opacity=0] (nodes1) {};
	\end{scope}
	\node[below left=-0.25cm and -0.22cm of nodes1,graphnode,minimum width=0.7cm,shadow opacity=0] (nodes2) {};

	% Steps of second part.
	\twosteps{}

	% Box around steps
	\node[innerbox,fit=(2step1) (2step2) (2step3) (2step4) (2step5) (2step6) (2step7)] (2stepbox) {};

	\twosteps{}

	% Small graph - Step 3
	\node[leftgraphnode,yshift=-0.5cm] (e1) at (2step1.north -| {$(2stepbox.east)!0.38!(container2.east)$}) {\dirsym};
	\node[graphnode, below right=0.9cm of e1] (e2) {\filesym};
	\node[graphnode, below right=0.9cm and 0.1cm of e2] (e3) {\codesym};
	\node[graphnode, below left=0.9cm and 0.1cm of e3] (e4) {\codesym};
	\node[graphnode, below left=0.9cm and 0.1cm of e2] (e5) {\codesym};

	\node[graphnode, below left=0.9cm of e1] (e6) {\filesym};
	\node[graphnode,below left=0.9cm and 0.1cm of e6] (e7) {\codesym};
	\node[graphnode,below right=0.9cm and 0.1cm of e6] (e8) {\codesym};

	\node[diagnosticnode,right=-0.1cm of e4] {!};
	\node[diagnosticnode,right=0.03cm of e4] {!};
	\node[diagnosticnode,right=-0.1cm of e5] {!};
	\node[diagnosticnode,left=-0.1cm of e7] {!};

	% Structure
	\draw[graphedge] (e1) -- (e2);
	\draw[graphedge] (e2) -- (e3);
	\draw[graphedge] (e3) -- (e4);
	\draw[graphedge] (e2) -- (e5);
	\draw[graphedge] (e1) -- (e6);
	\draw[graphedge] (e6) -- (e7);
	\draw[graphedge] (e7) -- (e8);

	% Actual edges
	\draw[->,green!70!black,thick] (e7) edge[bend left=50] node[above=-0.08cm,edgelabel] {reference} (e5);
	\draw[->,green!70!black,thick] (e5) edge[bend left=50] node[below=-0.08cm,edgelabel] {supertype} (e7);
	\draw[->,green!70!black,thick] (e5) -- node[edgelabel,below left=-0.08cm and -0.25cm] {call} (e4);

	% --- PART III ---

	\node[outercontainer,minimum width=13cm, minimum height=5cm,below=of container2] (container3) {};

	% Top of third part.
	\node[anchor=north, yshift=-0.2cm] at (container3.north) {\Large \textbf{\textsf{Part III: Aggregation}}};
	\node[anchor=north west, align=left, xshift=0.3cm,yshift=-1cm] (foreachroot) at (container3.north west) {For each root node\dots};
	\begin{scope}[opacity=0.3,transparency group]
		\node[right=0.3cm of foreachroot,opacity=0.3,yshift=0.15cm,graphnode,minimum width=0.7cm,shadow opacity=0] (rnodes) {\dirsym};
		\node[below left=-0.31cm and -0.27cm of rnodes,graphnode,minimum width=0.7cm,shadow opacity=0] (rnodes1) {\dirsym};
	\end{scope}
	\node[below left=-0.29cm and -0.24cm of rnodes1,graphnode,minimum width=0.7cm,shadow opacity=0] (rnodes2) {\dirsym};

	% Steps of third part.
	\threesteps{}

	% Box around steps
	\node[innerbox,fit=(3step1) (3step2)] (3stepbox) {};

	\threesteps{}

	% Small graph - Step 3
	\node[leftgraphnode,yshift=-1cm] (a1) at (container3.north -| {$(3stepbox.east)!0.38!(container3.east)$}) {\dirsym};
	\node[graphnode, below right=0.9cm of a1] (a2) {\filesym};
	\node[graphnode, below right=0.9cm and 0.1cm of a2] (a3) {\codesym};
	\node[graphnode, below left=0.9cm and 0.1cm of a3] (a4) {\codesym};
	\node[graphnode, below left=0.9cm and 0.1cm of a2] (a5) {\codesym};

	\node[graphnode, below left=0.9cm of a1] (a6) {\filesym};
	\node[graphnode,below left=0.9cm and 0.1cm of a6] (a7) {\codesym};
	\node[graphnode,below right=0.9cm and 0.1cm of a6] (a8) {\codesym};

	\node[diagnosticnode,right=-0.1cm of a4] {!};
	\node[diagnosticnode,right=0.03cm of a4] (agg4) {!};
	\node[diagnosticnode,right=-0.1cm of a5] (agg5) {!};
	\node[diagnosticnode,left=-0.1cm of a7] (agg7) {!};

	% Structure
	\draw[graphedge] (a1) -- (a2);
	\draw[graphedge] (a2) -- (a3);
	\draw[graphedge] (a3) -- (a4);
	\draw[graphedge] (a2) -- (a5);
	\draw[graphedge] (a1) -- (a6);
	\draw[graphedge] (a6) -- (a7);
	\draw[graphedge] (a7) -- (a8);

	% Actual edges
	\draw[->,thick,green!70!black] (a7) edge[bend left=50] (a5);
	\draw[->,thick,green!70!black] (a5) edge[bend left=50] (a7);
	\draw[->,thick,green!70!black] (a5) -- (a4);

	% Aggregation diagnostics
	\node[aggdiagnode,left=-0.1cm of a6] (agg6) {!};
	\node[aggdiagnode,right=-0.1cm of a3] (agg3) {!!};
	\node[aggdiagnode,right=-0.1cm of a2] (agg2) {!!!};
	\node[aggdiagnode,right=-0.1cm of a1] (agg1) {!!!!};

	% Aggregation
	\draw[aggedge] (agg4) edge[bend right] (agg3);
	\draw[aggedge] (agg3) -- (agg2);
	\draw[aggedge] (agg5) -- (agg2);
	\draw[aggedge] (agg2) -- (agg1);
	\draw[aggedge] (agg7) -- (agg6);
	\draw[aggedge] (agg6) edge[bend left=50] (agg1.north);

	\node at ($(container1.south)!0.5!(container2.north)$) {\pgfornament[color=Blue,width=3.5cm]{87}};
	\node at ($(container2.south)!0.5!(container3.north)$) {\pgfornament[color=Blue,width=3.5cm]{87}};

	% Required to keep shadows in the bounds of the picture.
	\node[opacity=0] at (container3.south -| container2.east) {.};

\end{tikzpicture}
